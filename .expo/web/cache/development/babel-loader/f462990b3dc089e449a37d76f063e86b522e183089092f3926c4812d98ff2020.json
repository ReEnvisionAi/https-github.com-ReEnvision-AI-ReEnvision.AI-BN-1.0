{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { flattenArray } from './utils';\nimport { makeViewDescriptorsSet } from '../reanimated2/ViewDescriptorsSet';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport updateProps from '../reanimated2/UpdateProps';\nimport { stopMapper, startMapper } from '../reanimated2/mappers';\nimport { isSharedValue } from '../reanimated2/isSharedValue';\nimport { shouldBeUseWeb } from '../reanimated2/PlatformChecker';\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nfunction isInlineStyleTransform(transform) {\n  if (!Array.isArray(transform)) {\n    return false;\n  }\n  return transform.some(function (t) {\n    return hasInlineStyles(t);\n  });\n}\nfunction inlinePropsHasChanged(styles1, styles2) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n  for (var key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n  return false;\n}\nvar _worklet_9755239701942_init_data = {\n  code: \"function getInlinePropsUpdate(inlineProps){const getInlinePropsUpdate=this._recur;const{isSharedValue}=this.__closure;const update={};for(const[key,styleValue]of Object.entries(inlineProps)){if(isSharedValue(styleValue)){update[key]=styleValue.value;}else if(Array.isArray(styleValue)){update[key]=styleValue.map(function(item){return getInlinePropsUpdate(item);});}else if(typeof styleValue==='object'){update[key]=getInlinePropsUpdate(styleValue);}else{update[key]=styleValue;}}return update;}\",\n  location: \"/home/project/node_modules/react-native-reanimated/lib/module/createAnimatedComponent/InlinePropManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getInlinePropsUpdate\\\",\\\"inlineProps\\\",\\\"_recur\\\",\\\"isSharedValue\\\",\\\"__closure\\\",\\\"update\\\",\\\"key\\\",\\\"styleValue\\\",\\\"Object\\\",\\\"entries\\\",\\\"value\\\",\\\"Array\\\",\\\"isArray\\\",\\\"map\\\",\\\"item\\\"],\\\"sources\\\":[\\\"/home/project/node_modules/react-native-reanimated/lib/module/createAnimatedComponent/InlinePropManager.js\\\"],\\\"mappings\\\":\\\"AA4BA,SAAAA,oBAASA,CAAqBC,WAAA,CAAW,OAAAD,oBAAA,MAAAE,MAAA,OAAAC,aAAA,OAAAC,SAAA,CAGvC,KAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CACjB,IAAK,KAAM,CAACC,GAAG,CAAEC,UAAU,CAAC,EAAI,CAAAC,MAAM,CAACC,OAAO,CAACR,WAAW,CAAC,CAAE,CAC3D,GAAIE,aAAa,CAACI,UAAU,CAAC,CAAE,CAC7BF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAACG,KAAK,CAChC,CAAC,IAAM,IAAIC,KAAK,CAACC,OAAO,CAACL,UAAU,CAAC,CAAE,CACpCF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAACM,GAAG,CAAC,SAAAC,IAAI,CAAI,CACnC,MAAO,CAAAd,oBAAoB,CAACc,IAAI,CAAC,CACnC,CAAC,CAAC,CACJ,CAAC,IAAM,IAAI,MAAO,CAAAP,UAAU,GAAK,QAAQ,CAAE,CACzCF,MAAM,CAACC,GAAG,CAAC,CAAGN,oBAAoB,CAACO,UAAU,CAAC,CAChD,CAAC,IAAM,CACLF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAC1B,CACF,CACA,MAAO,CAAAF,MAAM,CACf\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.6.3\"\n};\nvar getInlinePropsUpdate = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _getInlinePropsUpdate = function getInlinePropsUpdate(inlineProps) {\n    var update = {};\n    for (var _ref of Object.entries(inlineProps)) {\n      var _ref2 = _slicedToArray(_ref, 2);\n      var key = _ref2[0];\n      var styleValue = _ref2[1];\n      if (isSharedValue(styleValue)) {\n        update[key] = styleValue.value;\n      } else if (Array.isArray(styleValue)) {\n        update[key] = styleValue.map(function (item) {\n          return _getInlinePropsUpdate(item);\n        });\n      } else if (typeof styleValue === 'object') {\n        update[key] = _getInlinePropsUpdate(styleValue);\n      } else {\n        update[key] = styleValue;\n      }\n    }\n    return update;\n  };\n  _getInlinePropsUpdate.__closure = {\n    isSharedValue: isSharedValue\n  };\n  _getInlinePropsUpdate.__workletHash = 9755239701942;\n  _getInlinePropsUpdate.__initData = _worklet_9755239701942_init_data;\n  _getInlinePropsUpdate.__stackDetails = _e;\n  return _getInlinePropsUpdate;\n}();\nfunction extractSharedValuesMapFromProps(props) {\n  var inlineProps = {};\n  for (var key in props) {\n    var value = props[key];\n    if (key === 'style') {\n      var _props$style;\n      var styles = flattenArray((_props$style = props.style) != null ? _props$style : []);\n      styles.forEach(function (style) {\n        if (!style) {\n          return;\n        }\n        for (var _ref3 of Object.entries(style)) {\n          var _ref4 = _slicedToArray(_ref3, 2);\n          var _key = _ref4[0];\n          var styleValue = _ref4[1];\n          if (isSharedValue(styleValue)) {\n            inlineProps[_key] = styleValue;\n          } else if (_key === 'transform' && isInlineStyleTransform(styleValue)) {\n            inlineProps[_key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n  return inlineProps;\n}\nexport function hasInlineStyles(style) {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some(function (key) {\n    var styleValue = style[key];\n    return isSharedValue(styleValue) || key === 'transform' && isInlineStyleTransform(styleValue);\n  });\n}\nexport function getInlineStyle(style, isFirstRender) {\n  if (isFirstRender) {\n    return getInlinePropsUpdate(style);\n  }\n  var newStyle = {};\n  for (var _ref5 of Object.entries(style)) {\n    var _ref6 = _slicedToArray(_ref5, 2);\n    var key = _ref6[0];\n    var styleValue = _ref6[1];\n    if (!isSharedValue(styleValue) && !(key === 'transform' && isInlineStyleTransform(styleValue))) {\n      newStyle[key] = styleValue;\n    }\n  }\n  return newStyle;\n}\nvar _worklet_11406519397301_init_data = {\n  code: \"function anonymous(){const{getInlinePropsUpdate,newInlineProps,updateProps,shareableViewDescriptors,maybeViewRef}=this.__closure;const update=getInlinePropsUpdate(newInlineProps);updateProps(shareableViewDescriptors,update,maybeViewRef);}\",\n  location: \"/home/project/node_modules/react-native-reanimated/lib/module/createAnimatedComponent/InlinePropManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"getInlinePropsUpdate\\\",\\\"newInlineProps\\\",\\\"updateProps\\\",\\\"shareableViewDescriptors\\\",\\\"maybeViewRef\\\",\\\"__closure\\\",\\\"update\\\"],\\\"sources\\\":[\\\"/home/project/node_modules/react-native-reanimated/lib/module/createAnimatedComponent/InlinePropManager.js\\\"],\\\"mappings\\\":\\\"AA+H8B,SAAAA,SAAMA,CAAA,QAAAC,oBAAA,CAAAC,cAAA,CAAAC,WAAA,CAAAC,wBAAA,CAAAC,YAAA,OAAAC,SAAA,CAG5B,KAAM,CAAAC,MAAM,CAAGN,oBAAoB,CAACC,cAAc,CAAC,CACnDC,WAAW,CAACC,wBAAwB,CAAEG,MAAM,CAAEF,YAAY,CAAC,CAC7D\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.6.3\"\n};\nexport var InlinePropManager = function () {\n  function InlinePropManager() {\n    _classCallCheck(this, InlinePropManager);\n    _defineProperty(this, \"_inlinePropsViewDescriptors\", null);\n    _defineProperty(this, \"_inlinePropsMapperId\", null);\n    _defineProperty(this, \"_inlineProps\", {});\n  }\n  return _createClass(InlinePropManager, [{\n    key: \"attachInlineProps\",\n    value: function attachInlineProps(animatedComponent, viewInfo) {\n      var newInlineProps = extractSharedValuesMapFromProps(animatedComponent.props);\n      var hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n      if (hasChanged) {\n        if (!this._inlinePropsViewDescriptors) {\n          this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n          var viewTag = viewInfo.viewTag,\n            viewName = viewInfo.viewName,\n            shadowNodeWrapper = viewInfo.shadowNodeWrapper,\n            viewConfig = viewInfo.viewConfig;\n          if (Object.keys(newInlineProps).length && viewConfig) {\n            adaptViewConfig(viewConfig);\n          }\n          this._inlinePropsViewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n        var shareableViewDescriptors = this._inlinePropsViewDescriptors.shareableViewDescriptors;\n        var maybeViewRef = SHOULD_BE_USE_WEB ? {\n          items: new Set([animatedComponent])\n        } : undefined;\n        var updaterFunction = function () {\n          var _e = [new global.Error(), -6, -27];\n          var anonymous = function anonymous() {\n            var update = getInlinePropsUpdate(newInlineProps);\n            updateProps(shareableViewDescriptors, update, maybeViewRef);\n          };\n          anonymous.__closure = {\n            getInlinePropsUpdate: getInlinePropsUpdate,\n            newInlineProps: newInlineProps,\n            updateProps: updateProps,\n            shareableViewDescriptors: shareableViewDescriptors,\n            maybeViewRef: maybeViewRef\n          };\n          anonymous.__workletHash = 11406519397301;\n          anonymous.__initData = _worklet_11406519397301_init_data;\n          anonymous.__stackDetails = _e;\n          return anonymous;\n        }();\n        this._inlineProps = newInlineProps;\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n        this._inlinePropsMapperId = null;\n        if (Object.keys(newInlineProps).length) {\n          this._inlinePropsMapperId = startMapper(updaterFunction, Object.values(newInlineProps));\n        }\n      }\n    }\n  }, {\n    key: \"detachInlineProps\",\n    value: function detachInlineProps() {\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n    }\n  }]);\n}();","map":{"version":3,"names":["_classCallCheck","_createClass","_slicedToArray","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","flattenArray","makeViewDescriptorsSet","adaptViewConfig","updateProps","stopMapper","startMapper","isSharedValue","shouldBeUseWeb","SHOULD_BE_USE_WEB","isInlineStyleTransform","transform","Array","isArray","some","t","hasInlineStyles","inlinePropsHasChanged","styles1","styles2","keys","length","_worklet_9755239701942_init_data","code","location","sourceMap","version","getInlinePropsUpdate","_e","global","Error","_getInlinePropsUpdate","inlineProps","update","_ref","entries","_ref2","styleValue","map","item","__closure","__workletHash","__initData","__stackDetails","extractSharedValuesMapFromProps","props","_props$style","styles","style","forEach","_ref3","_ref4","getInlineStyle","isFirstRender","newStyle","_ref5","_ref6","_worklet_11406519397301_init_data","InlinePropManager","attachInlineProps","animatedComponent","viewInfo","newInlineProps","hasChanged","_inlineProps","_inlinePropsViewDescriptors","viewTag","viewName","shadowNodeWrapper","viewConfig","add","tag","name","shareableViewDescriptors","maybeViewRef","items","Set","updaterFunction","anonymous","_inlinePropsMapperId","values","detachInlineProps"],"sources":["/home/project/node_modules/react-native-reanimated/lib/module/createAnimatedComponent/InlinePropManager.ts"],"sourcesContent":["'use strict';\nimport type { StyleProps } from '../reanimated2';\nimport type {\n  IAnimatedComponentInternal,\n  AnimatedComponentProps,\n  IInlinePropManager,\n  ViewInfo,\n} from './commonTypes';\nimport { flattenArray } from './utils';\nimport { makeViewDescriptorsSet } from '../reanimated2/ViewDescriptorsSet';\nimport type {\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from '../reanimated2/ViewDescriptorsSet';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport updateProps from '../reanimated2/UpdateProps';\nimport { stopMapper, startMapper } from '../reanimated2/mappers';\nimport { isSharedValue } from '../reanimated2/isSharedValue';\nimport { shouldBeUseWeb } from '../reanimated2/PlatformChecker';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nfunction isInlineStyleTransform(transform: unknown): boolean {\n  if (!Array.isArray(transform)) {\n    return false;\n  }\n\n  return transform.some((t: Record<string, unknown>) => hasInlineStyles(t));\n}\n\nfunction inlinePropsHasChanged(\n  styles1: StyleProps,\n  styles2: StyleProps\n): boolean {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, unknown>) {\n  'worklet';\n  const update: Record<string, unknown> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else if (Array.isArray(styleValue)) {\n      update[key] = styleValue.map((item) => {\n        return getInlinePropsUpdate(item);\n      });\n    } else if (typeof styleValue === 'object') {\n      update[key] = getInlinePropsUpdate(styleValue as Record<string, unknown>);\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<\n    Record<string, unknown> /* Initial component props */\n  >\n): Record<string, unknown> {\n  const inlineProps: Record<string, unknown> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [key, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[key] = styleValue;\n          } else if (\n            key === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nexport function hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nexport function getInlineStyle(\n  style: Record<string, unknown>,\n  isFirstRender: boolean\n) {\n  if (isFirstRender) {\n    return getInlinePropsUpdate(style);\n  }\n  const newStyle: StyleProps = {};\n  for (const [key, styleValue] of Object.entries(style)) {\n    if (\n      !isSharedValue(styleValue) &&\n      !(key === 'transform' && isInlineStyleTransform(styleValue))\n    ) {\n      newStyle[key] = styleValue;\n    }\n  }\n  return newStyle;\n}\n\nexport class InlinePropManager implements IInlinePropManager {\n  _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n  _inlinePropsMapperId: number | null = null;\n  _inlineProps: StyleProps = {};\n\n  public attachInlineProps(\n    animatedComponent: React.Component<unknown, unknown> &\n      IAnimatedComponentInternal,\n    viewInfo: ViewInfo\n  ) {\n    const newInlineProps: Record<string, unknown> =\n      extractSharedValuesMapFromProps(animatedComponent.props);\n    const hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n\n    if (hasChanged) {\n      if (!this._inlinePropsViewDescriptors) {\n        this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n        const { viewTag, viewName, shadowNodeWrapper, viewConfig } = viewInfo;\n\n        if (Object.keys(newInlineProps).length && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n\n        this._inlinePropsViewDescriptors.add({\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          tag: viewTag as number,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          name: viewName!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n      const shareableViewDescriptors =\n        this._inlinePropsViewDescriptors.shareableViewDescriptors;\n\n      const maybeViewRef = SHOULD_BE_USE_WEB\n        ? ({ items: new Set([animatedComponent]) } as ViewRefSet<unknown>) // see makeViewsRefSet\n        : undefined;\n      const updaterFunction = () => {\n        'worklet';\n        const update = getInlinePropsUpdate(newInlineProps);\n        updateProps(shareableViewDescriptors, update, maybeViewRef);\n      };\n      this._inlineProps = newInlineProps;\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n      this._inlinePropsMapperId = null;\n      if (Object.keys(newInlineProps).length) {\n        this._inlinePropsMapperId = startMapper(\n          updaterFunction,\n          Object.values(newInlineProps)\n        );\n      }\n    }\n  }\n\n  public detachInlineProps() {\n    if (this._inlinePropsMapperId) {\n      stopMapper(this._inlinePropsMapperId);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/project/App.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { useEffect, useState } from 'react';\nimport { Desktop } from './src/components/Desktop/Desktop';\nimport { AuthPage } from './src/components/Auth/AuthPage';\nimport { useAuthStore } from './src/store/useAuthStore';\nimport supabase from './src/services/supabaseService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  var _useAuthStore = useAuthStore(),\n    user = _useAuthStore.user,\n    setUser = _useAuthStore.setUser,\n    loading = _useAuthStore.loading,\n    setLoading = _useAuthStore.setLoading;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    configError = _useState2[0],\n    setConfigError = _useState2[1];\n  useEffect(function () {\n    console.log('Checking variables...');\n    if (!process.env.EXPO_PUBLIC_SUPABASE_URL || !process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY) {\n      setConfigError(true);\n      setLoading(false);\n      return;\n    }\n    console.log('Checking active sessions...');\n    supabase.auth.getSession().then(function (_ref) {\n      var _session$user$email;\n      var session = _ref.data.session;\n      console.log('Session results:', session);\n      global.user_id = session != null && session.user ? session.user.id : null;\n      setUser(session != null && session.user ? {\n        id: session.user.id,\n        email: (_session$user$email = session.user.email) != null ? _session$user$email : ''\n      } : null);\n      setLoading(false);\n    });\n    var _supabase$auth$onAuth = supabase.auth.onAuthStateChange(function (_event, session) {\n        var _session$user$email2;\n        console.log('Auth state change:', _event, session);\n        global.user_id = session != null && session.user ? session.user.id : null;\n        setUser(session != null && session.user ? {\n          id: session.user.id,\n          email: (_session$user$email2 = session.user.email) != null ? _session$user$email2 : ''\n        } : null);\n      }),\n      subscription = _supabase$auth$onAuth.data.subscription;\n    return function () {\n      return subscription.unsubscribe();\n    };\n  }, [setUser, setLoading]);\n  return _jsxDEV(SafeAreaProvider, {\n    children: _jsxDEV(GestureHandlerRootView, {\n      style: {\n        flex: 1\n      },\n      children: [_jsxDEV(StatusBar, {\n        style: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), user ? _jsxDEV(Desktop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this) : _jsxDEV(AuthPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["StatusBar","SafeAreaProvider","GestureHandlerRootView","useEffect","useState","Desktop","AuthPage","useAuthStore","supabase","jsxDEV","_jsxDEV","App","_useAuthStore","user","setUser","loading","setLoading","_useState","_useState2","_slicedToArray","configError","setConfigError","console","log","process","env","EXPO_PUBLIC_SUPABASE_URL","EXPO_PUBLIC_SUPABASE_ANON_KEY","auth","getSession","then","_ref","_session$user$email","session","data","global","user_id","id","email","_supabase$auth$onAuth","onAuthStateChange","_event","_session$user$email2","subscription","unsubscribe","children","style","flex","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/project/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { useEffect, useState } from 'react';\nimport { Desktop } from './src/components/Desktop/Desktop';\nimport { AuthPage } from './src/components/Auth/AuthPage';\nimport { useAuthStore } from './src/store/useAuthStore';\nimport supabase from './src/services/supabaseService';\n\nexport default function App() {\n  const { user, setUser, loading, setLoading } = useAuthStore();\n  const [configError, setConfigError] = useState(false);\n\n  useEffect(() => {\n    // Check if Supabase is properly configured\n    console.log('Checking variables...');\n    if (!process.env.EXPO_PUBLIC_SUPABASE_URL || !process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY) {\n      setConfigError(true);\n      setLoading(false);\n      return;\n    }\n\n    console.log('Checking active sessions...');\n    // Check active sessions and sets the user\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      console.log('Session results:', session);\n      global.user_id = session?.user ? session.user.id : null;\n      setUser(\n        session?.user\n          ? {\n              id: session.user.id,\n              email: session.user.email ?? '',\n            }\n          : null,\n      );\n      setLoading(false);\n    });\n\n    // Listen for changes on auth state (sign in, sign out, etc.)\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      console.log('Auth state change:', _event, session);\n      global.user_id = session?.user ? session.user.id : null;\n      setUser(\n        session?.user\n          ? {\n              id: session.user.id,\n              email: session.user.email ?? '',\n            }\n          : null,\n      );\n    });\n\n    return () => subscription.unsubscribe();\n  }, [setUser, setLoading]);\n\n  return (\n    <SafeAreaProvider>\n      <GestureHandlerRootView style={{ flex: 1 }}>\n        <StatusBar style=\"light\" />\n        {user ? <Desktop /> : <AuthPage />}\n      </GestureHandlerRootView>\n    </SafeAreaProvider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
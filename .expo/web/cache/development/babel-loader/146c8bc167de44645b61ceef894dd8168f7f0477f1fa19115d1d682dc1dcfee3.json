{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/project/src/components/Desktop/TaskBarItem.tsx\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { useStore } from '../../store/useWindowStore';\nimport { iconMap } from '../utils/iconmap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var TaskbarItem = function TaskbarItem(_ref) {\n  var window = _ref.window;\n  var _useStore = useStore(),\n    updateWindow = _useStore.updateWindow,\n    bringToFront = _useStore.bringToFront;\n  var Icon = iconMap[window.app.icon];\n  var handleClick = function handleClick() {\n    if (window.isMinimized) {\n      updateWindow(_objectSpread(_objectSpread({}, window), {}, {\n        isMinimized: false\n      }));\n    }\n    bringToFront(window.id);\n  };\n  return _jsxDEV(\"div\", {\n    className: `\n      flex flex-col items-center min-w-[80px] p-2 rounded-lg cursor-pointer\n      touch-manipulation transition-colors hover-centered\n      ${window.isMinimized ? 'bg-white/10' : 'bg-white/20'}\n    `,\n    onClick: handleClick,\n    children: [_jsxDEV(Icon, {\n      className: \"w-6 h-6 text-white mb-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this), _jsxDEV(\"span\", {\n      className: \"text-white text-xs truncate max-w-[70px]\",\n      children: window.app.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};","map":{"version":3,"names":["React","useStore","iconMap","jsxDEV","_jsxDEV","TaskbarItem","_ref","window","_useStore","updateWindow","bringToFront","Icon","app","icon","handleClick","isMinimized","_objectSpread","id","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","name"],"sources":["/home/project/src/components/Desktop/TaskBarItem.tsx"],"sourcesContent":["import React from 'react';\nimport { useStore } from '../../store/useWindowStore';\nimport type { Window } from '../../types';\nimport { iconMap } from '../utils/iconmap';\n\ninterface TaskbarItemProps {\n  window: Window;\n}\n\nexport const TaskbarItem: React.FC<TaskbarItemProps> = ({ window }) => {\n  const { updateWindow, bringToFront } = useStore();\n  const Icon = iconMap[window.app.icon];\n\n  const handleClick = () => {\n    if (window.isMinimized) {\n      updateWindow({ ...window, isMinimized: false });\n    }\n    bringToFront(window.id);\n  };\n\n  return (\n    <div\n      className={`\n      flex flex-col items-center min-w-[80px] p-2 rounded-lg cursor-pointer\n      touch-manipulation transition-colors hover-centered\n      ${window.isMinimized ? 'bg-white/10' : 'bg-white/20'}\n    `}\n      onClick={handleClick}\n    >\n      <Icon className=\"w-6 h-6 text-white mb-1\" />\n      <span className=\"text-white text-xs truncate max-w-[70px]\">{window.app.name}</span>\n    </div>\n  );\n};\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,4BAA4B;AAErD,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM3C,OAAO,IAAMC,WAAuC,GAAG,SAA1CA,WAAuCA,CAAAC,IAAA,EAAmB;EAAA,IAAbC,MAAM,GAAAD,IAAA,CAANC,MAAM;EAC9D,IAAAC,SAAA,GAAuCP,QAAQ,CAAC,CAAC;IAAzCQ,YAAY,GAAAD,SAAA,CAAZC,YAAY;IAAEC,YAAY,GAAAF,SAAA,CAAZE,YAAY;EAClC,IAAMC,IAAI,GAAGT,OAAO,CAACK,MAAM,CAACK,GAAG,CAACC,IAAI,CAAC;EAErC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIP,MAAM,CAACQ,WAAW,EAAE;MACtBN,YAAY,CAAAO,aAAA,CAAAA,aAAA,KAAMT,MAAM;QAAEQ,WAAW,EAAE;MAAK,EAAE,CAAC;IACjD;IACAL,YAAY,CAACH,MAAM,CAACU,EAAE,CAAC;EACzB,CAAC;EAED,OACEb,OAAA;IACEc,SAAS,EAAE;AACjB;AACA;AACA,QAAQX,MAAM,CAACQ,WAAW,GAAG,aAAa,GAAG,aAAa;AAC1D,KAAM;IACAI,OAAO,EAAEL,WAAY;IAAAM,QAAA,GAErBhB,OAAA,CAACO,IAAI;MAACO,SAAS,EAAC;IAAyB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,EAC5CrB,OAAA;MAAMc,SAAS,EAAC,0CAA0C;MAAAE,QAAA,EAAEb,MAAM,CAACK,GAAG,CAACc;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAO,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAChF,CAAC;AAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}